# This is the default profile that gets used when no other profile is specified. This is meant as a 
# general case profile and may not match your needs exactly. This does not have the perfect quality but aims for
# a good balance of quality and speed and compatibility. You can create a new INI file in this directory
# and override individual settings to create your own profiles. You can then use it when starting the movie like this:
#
#    startmovie a.mov profile=my_profile
#
# The above command will select the my_profile.ini file in this directory.

#################################################################
# Movie encoding
#################################################################

# The constant framerate to use for the movie. Whole numbers only.
video_fps=60

# The video encoder to use for the movie. Available options are: libx264, libx264_444, dnxhr.
# libx264 is used with the NV12 pixel format (12 bits per pixel).
# libx264_444 is used with the YUV444 pixel format (24 bits per pixel).
# dnxhr is used with the YUV422 pixel format (16 bits per pixel).
#
# The libx264 encoder does not work well in video editors and is slower to encode. It is a good format if you intend
# to directly distribute the output with no processing. Files using this codec will be small.
# Using libx264_444 may lead to compatibility issues and may not work properly.
#
# The dnxhr encoder works best if you intend to use the output in a video editor, and not directly distribute the compressed video.
# Files using this codec will be large, but it will produce the best result if you intend to delete the files after.
# Videos using dnxhr can be compressed well if you intend to archive the output later.
#
# You cannot use the mp4 container with dnxhr. You must instead use mov or mkv.
# Note that not all video and audio encoders and containers are compatible with each other.
video_encoder=dnxhr

# The constant rate factor to use for the movie. This is the direct link between quality and file size.
# Using 0 here produces lossless video, but may cause the video stream to not be supported in some media players.
# This should be between 0 and 52. A lower value means better quality but larger file size.
video_x264_crf=15

# The quality vs speed to use for encoding the movie. Basically how much time to spend on quality for each frame.
# This can be one of ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow, placebo.
# A slower preset may decrease the file size, and will produce slightly better quality but will significantly slow down
# the processing speed.
# A faster preset can create worse quality and will create larger files but will be much faster.
video_x264_preset=ultrafast

# This decides whether or not the video stream will consist only of keyframes.
# This essentially disables any compression and will very *greatly* increase the file size, but makes video editing
# very fast.
video_x264_intra=0

# What quality to use for dnxhr.
# Available options are lb, sq, hq.
# The options meaning low bitrate (lb), standard quality (sq), high quality (hq).
# Typically you will leave this on hq, but you can use lb and sq for fast low quality tests.
video_dnxhr_profile=hq

# Enable if you want audio.
audio_enabled=1

# The audio encoder to use for the movie. Available options are: aac.
# Note that not all video and audio encoders and containers are compatible with each other.
audio_encoder=aac

#################################################################
# Motion blur
#################################################################

# Whether or not motion blur should be enabled or not.
motion_blur_enabled=0

# How much to multiply the movie framerate with. The product of this is how many samples per second
# that will be processed. For example, a 60 fps movie with 60 motion blur mult becomes 3600 samples per second.
# This must be greater than 1.
motion_blur_fps_mult=60

# Fraction of how much time per movie frame (video_fps above) that should be exposed for sampling.
# This should be between 0.0 and 1.0.
motion_blur_exposure=0.5

#################################################################
# Velocity overlay
#################################################################

# The velocity overlay will show the velocity of the current player. In case of multiplayer games with spectating,
# it will use the spectated player.
# This is restricted to CSS, TF2, CSGO.

# Whether or not the velocity overlay is enabled.
velo_enabled=0

# The font family name to use.
# This should be the name of a font family that is installed on the system (such as Arial. You can see the
# installed fonts by searching Fonts in Start).
velo_font=Segoe UI

# The size of the font in points.
velo_font_size=48

# The RGBA color components between 0 and 255.
# This is the color of the text.
velo_color=255 255 255 100

# The RGBA color components between 0 and 255.
# This is the color of the text border.
velo_border_color=0 0 0 255

# Border size of velocity overlay. Set to 0 to disable. The border is expanded inwards from the outer edges.
velo_border_size=0

# This is how tilted the text should be.
# This can be one of normal, italic, extraitalic.
velo_font_style=normal

# This is how bold or thin the font should be.
# It can be one of thin, extralight, light, semilight, normal, medium, semibold, bold, extrabold, black, extrablack.
velo_font_weight=thin

# Percentage alignments based from the center of the screen. First value is horizontal and second is vertical.
# 0 in both axes mean the center of the screen. A positive value will increase to the right and down.
# A negative value will increase to the left and up.
velo_align=-80 80

# Direction of text expansion. Possible values are: left, center, right.
# If you intend to show the text on the left side, you would want to use left here, and so on.
# A value of center means that the text will expand outwards both left and right.
# A value of left means that the text will expand to the right.
velo_anchor=left

# Length of which velocity to show. Possible values are: xy, xyz, z.
velo_length=xy
